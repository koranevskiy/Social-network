{"version":3,"file":"static/js/183.0834299b.chunk.js","mappings":"0KACA,EAA+B,8BAA/B,EAAuE,yBAAvE,EAA8G,6BAA9G,EAAoJ,wBAApJ,EAAwL,2BAAxL,EAAmO,+BAAnO,EAA8S,0BAA9S,EAAkV,yBAAlV,EAAwX,4BAAxX,EAAqa,gCAAra,EAAkd,4B,mBCiBld,EAdmB,SAACA,GAChB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASC,GAAE,mBAAcH,EAAMI,IAA/B,eAAsC,gBAClCC,IAAI,+EAA+EC,IAAI,iBAI/F,gBAAKL,UAAWC,EAAhB,UAAuC,SAAC,KAAD,CAASC,GAAE,mBAAcH,EAAMI,IAA/B,SAAsCJ,EAAMO,aCI/F,EAbgB,SAACP,GACb,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UAAoC,UAAC,KAAD,CAASC,GAAG,eAAZ,eAA4B,gBAC5DE,IAAI,+EAA+EC,IAAI,iBAE3F,gBAAKL,UAAWC,EAAhB,UACI,0BAAOF,EAAMQ,gB,UCuC7B,EA3CgB,SAACR,GAEb,IAGA,GAA6CS,EAAAA,EAAAA,IAAU,CACnDC,cAAe,CACXF,QAAS,IAEbG,SAAU,YAAgB,IAPRC,EAONJ,EAAa,EAAbA,QAPMI,EAQCJ,EAPnBR,EAAMa,eAAeD,MAElBE,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,aAAcC,EAAnC,EAAmCA,OAQ/BC,EAAkBjB,EAAMkB,MAAMC,YAC7BC,KAAI,SAACC,GACF,OAAO,SAAC,EAAD,CAAYd,KAAMc,EAAKd,KAAMH,GAAIiB,EAAKjB,IAASiB,EAAKjB,OAE/DkB,EAAkBtB,EAAMkB,MAAMK,SAC7BH,KAAI,SAACC,GAAD,OAAU,SAAC,EAAD,CAASb,QAASa,EAAKb,SACTa,EAAKjB,OAGtC,OACI,iBAAKH,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKe,KAEL,gBAAKhB,UAAWC,EAAhB,SAEKoB,QAIT,kBAAMX,SAAUG,EAAcb,UAAWC,EAAzC,WACQ,qBAAUK,KAAM,UAAWiB,MAAOR,EAAOR,QAC/BiB,SAAUV,KACxB,mBAAQW,KAAM,SAAd,yB,wCCxBhB,EAhByB,SAACC,GACtB,OAAO,SAAC3B,GAEJ,IAAM4B,GAAWC,EAAAA,EAAAA,MACbC,GAASC,EAAAA,EAAAA,KAAY,SAAAb,GAAK,OAAIA,EAAMc,KAAKF,UAO7C,OANAG,EAAAA,EAAAA,YAAU,WACDH,GACDF,EAAS,YAEd,CAACE,KAGA,SAACH,GAAD,UAAe3B,MCI3B,EAdyB,SAACA,GACtB,IAAMkC,GAAWC,EAAAA,EAAAA,MAKbjB,GAAQa,EAAAA,EAAAA,KAAY,SAAAb,GAAK,OAAIA,EAAMkB,cACjCC,EAAkBC,EAAiBC,GACzC,OACI,SAACF,EAAD,CAAiBnB,MAASA,EACzBL,eAPgB,SAACD,GAClBsB,GAASM,EAAAA,EAAAA,GAAwB5B","sources":["webpack://first-react/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"structDialog\":\"Dialogs_structDialog__APG1Y\",\"dialogs\":\"Dialogs_dialogs__eZwYq\",\"dialogsItem\":\"Dialogs_dialogsItem__ZAz4+\",\"dialog\":\"Dialogs_dialog__yB3oJ\",\"dialogImg\":\"Dialogs_dialogImg__K+wRm\",\"dialogContent\":\"Dialogs_dialogContent__jLUGV\",\"active\":\"Dialogs_active__Daw11\",\"messages\":\"Dialogs_messages__bASW+\",\"message\":\"Dialogs_message__wS8Ct\",\"messageAva\":\"Dialogs_messageAva__bc+Br\",\"messageContent\":\"Dialogs_messageContent__CEtJX\",\"newMessage\":\"Dialogs_newMessage__Pwdbg\"};","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <div className={classes.dialogImg}>\r\n                <NavLink to={`/dialogs/${props.id}`}> <img\r\n                    src=\"https://i.pinimg.com/originals/ba/66/02/ba6602a51ea3490764cb1e03ea28fae8.jpg\" alt=\"avatar\"/>\r\n                </NavLink>\r\n            </div>\r\n\r\n            <div className={classes.dialogContent}><NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            <div className={classes.messageAva}><NavLink to=\"/dialogs/?bl\"> <img\r\n                src=\"https://i.pinimg.com/originals/ba/66/02/ba6602a51ea3490764cb1e03ea28fae8.jpg\" alt=\"avatar\"/>\r\n            </NavLink></div>\r\n            <div className={classes.messageContent}>\r\n                <span>{props.message}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onClickMessage = (text) => {\r\n        props.onClickMessage(text);\r\n    };\r\n    const {handleSubmit, handleChange, values} = useFormik({\r\n        initialValues: {\r\n            message: ''\r\n        },\r\n        onSubmit: ({message}) => {\r\n            onClickMessage(message);\r\n        }\r\n    })\r\n    let dialogsElements = props.state.dialogsData\r\n        .map((item) => {\r\n            return <DialogItem name={item.name} id={item.id} key={item.id}/>;\r\n        })\r\n    let messagesElement = props.state.messages\r\n        .map((item) => <Message message={item.message}\r\n                                key={item.id}/>);\r\n\r\n\r\n    return (\r\n        <div className={classes.structDialog}>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogsItem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={classes.messages}>\r\n\r\n                    {messagesElement}\r\n\r\n                </div>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className={classes.newMessage}>\r\n                    <textarea name={'message'} value={values.message}\r\n                              onChange={handleChange}></textarea>\r\n                <button type={'submit'}>Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React, {useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    return (props) => {\r\n\r\n        const navigate = useNavigate();\r\n        let isAuth = useSelector(state => state.auth.isAuth);\r\n        useEffect(() => {\r\n            if (!isAuth) {\r\n                navigate('/login')\r\n            }\r\n        }, [isAuth])\r\n\r\n        return (\r\n            <Component {...props}/>\r\n        )\r\n    }\r\n}\r\nexport default withAuthRedirect;","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nconst DialogsContainer = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    let onClickMessage = (text) => {\r\n        dispatch(addMessageActionCreator(text));\r\n    };\r\n    let state = useSelector(state => state.dialogPage);\r\n    const DialogsWithAuth = withAuthRedirect(Dialogs);\r\n    return (\r\n        <DialogsWithAuth state = {state}\r\n         onClickMessage = {onClickMessage}/>\r\n    );\r\n};\r\n\r\nexport default DialogsContainer;"],"names":["props","className","classes","to","id","src","alt","name","message","useFormik","initialValues","onSubmit","text","onClickMessage","handleSubmit","handleChange","values","dialogsElements","state","dialogsData","map","item","messagesElement","messages","value","onChange","type","Component","navigate","useNavigate","isAuth","useSelector","auth","useEffect","dispatch","useDispatch","dialogPage","DialogsWithAuth","withAuthRedirect","Dialogs","addMessageActionCreator"],"sourceRoot":""}